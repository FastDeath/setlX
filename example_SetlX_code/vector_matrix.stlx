// Matrix & vector example show case
// =================================
// This file shows supported operations & syntax

// Definition
// ----------

a := matrix([[1,2],[3,4]]);
b := matrix([[5,6],[7,8]]);
c := vector([1,2,3]);
d := vector([5,6,7]);
e := matrix([[1,2,3]]);
f := matrix([[1],[2],[3]]);

// Matrix
// ------

print("Matrix: a: [[1,2],[3,4]] & b: [[5,6],[7,8]]");

print("a * b: " + (a * b));
print("a * 2: " + (a * 2));

print("a + b: " + (a + b));
print("a - b: " + (a - b));

print("a ^ 3: " + (a ** 3));

print("transpose a: " + (a!));

print("determinante a: " + matrixdeterminante(a));

print("solve a * x = b for x: " + matrixsolve(a,b));

print("singular value decomposition of a: " + singularValueDecomposition(a));

print("eigen values of a: " + eigenValue(a));
print("eigen vectors of a: " + eigenVectors(a));

print("a[1]: " + a[1]);
a[1] := [5,6];
print("a[1] := [5,6]; a: " + a);

print("");
// Vector
// ------

print("Vector: c: [1,2,3] & d := [5,6,7]");

print("c * 2: " + (c * 2));
print("Scalar product:");
print("c * d: " + (c * d));

print("Cross product:");
print("c Ã— d: " + (c ** d));

print("c + d: " + (c + d));
print("c - d: " + (c - d));

print("c[1]: " + c[1]);
d[1] := 9;
print("d[1] := 9; d: " + d);

print("");
// Conversion
// ----------

print("Conversion between matrix & vector:");
print("Single row matrix: e: [[1,2,3]]");
print("Single column matrix: f: [[1],[2],[3]]");

print("Explicit conversion");

print("vector from matrix (one row only): " + vector(e));
print("vector from matrix (one column only): " + vector(f));

print("matrix from vector: " + matrix(c));

print("Implicit conversion");
print("Matrix operations taking vectors as parameters:");

print("e + c: " + (e + c));
print("f - d: " + (f - d));

print("e * c: " + (e * c));


print("Vector operations taking (single row or single column) matrices as parameters:");

print("c + e: " + (c + e));
print("d - f: " + (d - f));

print("c * e: " + (c * e));
