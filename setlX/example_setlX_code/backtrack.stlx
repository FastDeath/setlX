// this program demonstrates using the try catch block for backtracking

test := procedure(n) {
    print("n = $n$");
    try {
        // we do something here

            /* but not in this simple example */

        // and then check if the result is correct
        check(n == 5);
        print("done!");

    } catchUsr (e) {
        // Only catch e here when it was thrown using throw() and not when
        // it was thrown by different semantic or syntactic error .
        // If we don't do this, debugging will be a nightmare, because errors are hidden!

        // try next one
        test(n + 1);
    }
};

// throw an exception if condition is false
check := procedure(condition) {
    if (!condition) {
        throw("backtrack");
    }
};

test(1);

