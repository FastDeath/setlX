matcher := procedure(t) {
    match(t) {
        case []:
            print("empty list/string");
        case {}:
            print("empty set");

        case [x,y]:
            print("lists/strings only two: $x$, $y$");
        case [x,y,z | r]: // but the rest can be empty
            print("lists/strings first: $x$, $y$, $z$ rest: $r$");

        case {x,y}:
            print("sets only two: $x$, $y$");
        case {x | r}:
            print("sets first: $x$ rest: $r$");
        default:
            print("no match");
    }
};

matcher([]);
matcher([1, 5]);
matcher([1 .. 10]);
matcher("");
matcher("ab");
matcher("foobar");
matcher({});
matcher({"a", [1 .. 5]});
matcher({"a"});

