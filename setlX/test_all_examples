#!/bin/bash

tmpFile=$(mktemp -t setlx-XXXXXXXXXX)

manualTestFiles=""

# prepare the interpreter
simpleTest=simpleTest/test.stlx
cd src; make test >/dev/null 2>"$tmpFile"; cd ..

# check for failed tests
failedCount=$(grep -c "failed" "$tmpFile")
okCount=$(grep -c "successful" "$tmpFile")

# alert the user and stop
if [ $failedCount -gt 0 -o $okCount -lt 23 ] # <=  "23" is number of tests in `make test'
  then
    echo "the initial testfile '$simpleTest' failed!"
    rm -f "$tmpFile"
    exit 1
else
    echo -e "executing file '$simpleTest' successful!\n"
fi

# loop through all SetlX files, execute them and compare to reference result
while read -r -d $'\0' path
  do
    filename="${path#example_SetlX_code/}"

    if [ "$1" == "no_performance" -a "$(dirname $filename)" == "performance_test_code" ]
      then
        continue
    fi

    if [ ! -e "$path.reference" ]
      then
        manualTestFiles="$manualTestFiles$filename, "
        continue
    fi

    echo -n "executing file '$filename' ..."

    # execute with setlX
    if [ -e "$path.input" ]
      then
        cd src; cat "../$path.input" | ./setlX --predictableRandom "../$path" > "$tmpFile" 2>&1; cd ..
    else
        cd src; ./setlX --predictableRandom "../$path" > "$tmpFile" 2>&1; cd ..
    fi

    diff "$path.reference" "$tmpFile" > diff.result
    if [ $? -eq 1 ]
      then
        echo " failed ... (see diff.result)"

        rm -f "$tmpFile"
        exit 2
    else
        echo -e " successful!\n"
    fi

done < <( find -L example_SetlX_code -name "*.stlx" -print0 )

rm -f diff.result

rm -f "$tmpFile"

manualTestFiles="${manualTestFiles%, }"
echo "The following files need user input and can only be tested manually: $manualTestFiles"

exit 0

