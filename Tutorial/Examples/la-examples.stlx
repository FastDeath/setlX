v := <<1/2 1/4 1/5>>;
print("v = $v$");

a := <<1 2 3>>;
b := <<4 5 6>>;
print("$a$ + $b$ = $a + b$");
print("$a$ - $b$ = $a - b$");
print("1/2 * $a$ = $1/2 * a$");
print("$a$ * (1/2) = $a * (1/2)$");

v *= 2.5;
print("v = $v$");

print("$a$ * $b$ = $a * b$");
print("$a$ >< $b$ = $a >< b$");


a := << <<1 2>> <<3 4>> >>;
b := << <<5 6>> <<7 8>> >>;
v := <<5 6>>;

print("$a$ + $b$ = $a + b$");
print("$a$ - $b$ = $a - b$");
print("2 * $a$ = $2 * a$");
print("$a$ * $b$ = $a * b$");
print("$a$ * $v$ = $a * v$");
print("$a$ ** 2 = $a ** 2$");
print("$a$ ** -1 = $a ** -1$");
print("#$a$ = $#a$");
print("#$a$[1] = $#a[1]$");
print("la_det($a$) = $la_det(a)$");

a := << <<1 2>> <<3 4>> >>;

print("la_solve($a$, $v$) = $la_solve(a, v)$");

print("\nThe next example shows what happens if the condition number");
print("of the matrix used in la_solve is big:\n");
a := << <<1.000 2.000>> <<2.000 3.999>> >>;
b := <<4.000 7.999>>;
x := la_solve(a, b);
print("la_solve($a$, $b$) =");
print("$x$\n");
c := <<4.001 7.998>>;
x := la_solve(a, c);
print("la_solve($a$, $c$) ");
print("$x$\n");
print("la_cond($a$) = $la_cond(a)$\n");

print("Singular Value Decomposition:\n");
[u, s, v] := la_svd(a);
print("svd($a$) = [u, v, d], where");
print("u = $u$");
print("s = $s$");
print("v = $v$");
print("u * s * v! = $u * s * v!$");
print("\n");

print("Eigenvectors and Eigenvalues:\n");
print("la_eigenValues($a$) = $la_eigenValues(a)$");
print("la_eigenVectors($a$) = $la_eigenVectors(a)$");

extractEigenVectors := procedure(a) {
    eigV := la_eigenVectors(a);
    rng  := [1 .. #eigV];
    return [ la_vector([eigV[row][col] : row in rng]): col in rng ];
};
print("eigenvectors of $a$");
print(extractEigenVectors(a));
