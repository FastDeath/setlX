#!/bin/bash

testFile=$(mktemp -t setlx-XXXXXXXXXX)

# set location for setlX launcher script
export OVERRIDE_setlXJarLocation="$PWD/src/setlX.jar"

# other locations for tests
setlXlaunchScript="$PWD/src/setlX"

$setlXlaunchScript --version > "$testFile"
if [ $? -ne 0 ]
  then
    cat "$testFile"
    echo "Please make sure the interpreter is already compiled and executable."

    rm -f "$testFile"
    exit 1
fi

version="v$(cat "$testFile" | tr '.' '-')"

resultFileName="example_SetlX_code/performance_test_code/results/$(hostname | tr '.' '-')_$version"

resultFileNameReal="$resultFileName.real.csv"
resultFileNameUser="$resultFileName.user.csv"
resultFileNameSys="$resultFileName.sys.csv"

rm -f "$resultFileNameReal" "$resultFileNameUser" "$resultFileNameSys"

nSkipped=0
sumRealTime=0.0
sumUserTime=0.0
sumSysTime=0.0

# count number of files
count=0
while read -r -d $'\0' path
  do
    count=$(bc <<< "$count + 1")
done < <( find -L "example_SetlX_code/performance_test_code" -name "*.stlx" -print0 )

# loop through all SetlX files, execute them and compare to reference result
started=0
while read -r -d $'\0' path
  do
    shortname="${path#example_SetlX_code/performance_test_code/}"
    directoryname="$(dirname $path)"
    filename="$(basename $path)"

    started=$(bc <<< "$started + 1")
    echo "($started/$count) executing file '$shortname' ..."

    cd "$directoryname"
    execTime=$(
        time -p (
            # execute with setlX
            $setlXlaunchScript --predictableRandom "$filename" > "$testFile" 2>&1
        ) 2>&1
    )
    cd - >/dev/null

    diff "$path.reference" "$testFile" > /dev/null
    if [ $? -eq 1 ]
      then

        cat $testFile
        echo "executing file '$filename' failed, skipping this test."

        nSkipped=$(bc <<< "$nSkipped + 1")

        echo

    else
        read -a timeArray <<<$execTime
        realTime=${timeArray[1]}
        userTime=${timeArray[3]}
        sysTime=${timeArray[5]}

        echo "$filename,$realTime" >> "$resultFileNameReal"
        echo "$filename,$userTime" >> "$resultFileNameUser"
        echo "$filename,$sysTime"  >> "$resultFileNameSys"

        echo "real: $realTime, user: $userTime, sys: $sysTime"

        sumRealTime=$(bc <<< "$sumRealTime + $realTime")
        sumUserTime=$(bc <<< "$sumUserTime + $userTime")
        sumSysTime=$(bc <<< "$sumSysTime + $sysTime")

        echo
    fi

done < <( find -L "example_SetlX_code/performance_test_code" -name "*.stlx" -print0 )

cat "$resultFileNameReal" | sort > "$testFile"
echo "code example,$version - time in seconds (real)" > "$resultFileNameReal"
cat "$testFile" >> "$resultFileNameReal"
echo "overall,$sumRealTime" >> "$resultFileNameReal"

cat "$resultFileNameUser" | sort > "$testFile"
echo "code example,$version - time in seconds (user)" > "$resultFileNameUser"
cat "$testFile" >> "$resultFileNameUser"
echo "overall,$sumUserTime" >> "$resultFileNameUser"

cat "$resultFileNameSys" | sort > "$testFile"
echo "code example,$version - time in seconds (sys)" > "$resultFileNameSys"
cat "$testFile" >> "$resultFileNameSys"
echo "overall,$sumSysTime" >> "$resultFileNameSys"

rm -f "$testFile"

echo "overall execution time (skipped $nSkipped tests):"
echo "real: $sumRealTime, user: $sumUserTime, sys: $sumSysTime"
echo

exit 0

