<project name="setlX-gfx" basedir="." default="jar">
    <!-- variables which determine paths and other information used later -->
    <property name="j16rt.dir"   value="${basedir}/../buildTools/java_1_6"/>
    <property name="src.dir"     value="${basedir}/java-src"/>
    <property name="build.dir"   value="${basedir}/build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>

    <property name="main_setlX.dir" value="${basedir}/../src"/>
    <condition property="setlX.executable" value="setlX" else="setlX.cmd">
        <os family="unix" />
    </condition>
    <condition property="isJava6">
        <contains string="${java.version}" substring="1.6" casesensitive="false"/>
    </condition>

    <!-- discover library jars and add them to the class-path -->
    <path id="setlX-jar">
        <fileset dir="${main_setlX.dir}" includes="setlX.jar"/>
    </path>
    <path id="setlX-jar-j1.6">
        <fileset dir="${main_setlX.dir}" includes="setlX-j1.6.jar"/>
    </path>
    <path id="classpath">
        <path refid="setlX-jar"/>
        <pathelement path="${classes.dir}"/>
    </path>
    <path id="classpath-j1.6">
        <path refid="setlX-jar-j1.6"/>
        <pathelement path="${classes.dir}"/>
    </path>

    <!-- discover rt.jar from java-1.6 for building 1.6 compatible with newer javac -->
    <path id="rt.jar-j1.6">
        <fileset dir="${j16rt.dir}/" includes="rt.jar"/>
    </path>

    <target name="test" depends="jar">
        <exec executable="${setlX.executable}" dir="${main_setlX.dir}" resolveexecutable="true">
            <arg value="--runtimeDebugging"/>
            <arg file="simpleTest/test-gfx.stlx"/>
        </exec>
    </target>

    <!-- create jar after compiling -->
    <target name="jar" depends="compile">
        <exec executable="git" failifexecutionfails="yes" outputproperty="git.version">
            <arg value="describe"/>
            <arg value="--abbrev=40"/>
            <arg value="--always"/>
            <arg value="--dirty"/>
        </exec>
        <tstamp>
            <format property="timeAndDate.str" pattern="yyyy-MM-dd HH:mm:ss"/>
        </tstamp>
        <jar destfile="${main_setlX.dir}/${ant.project.name}.jar" basedir="${classes.dir}" index="true">
            <manifest>
                <attribute name="Built-By"                value="${user.name} on ${timeAndDate.str}" />
                <attribute name="Implementation-Version"  value="${git.version}" />
                <attribute name="Implementation-Java"     value="${java.vendor} ${java.version}" />
                <attribute name="Implementation-Build-OS" value="${os.name} ${os.arch} ${os.version}" />
            </manifest>
        </jar>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}"
               debug="true" debuglevel="lines,source"
               classpathref="classpath" includeantruntime="false">
            <compilerarg value="-Xlint:all"/>
        </javac>
    </target>

    <target name="compile-j1.6-compatible" depends="download-j1.6-rt.jar">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}"
               debug="true" debuglevel="lines,source"
               classpathref="classpath-j1.6" includeantruntime="false"
               fork="true" source="1.6" target="1.6" bootclasspathref="rt.jar-j1.6">
            <compilerarg value="-Xlint:all"/>
        </javac>
    </target>

    <!-- compile either with native Java 1.6, or in compatibility mode -->
    <target name="compile-j1.6" depends="compile-is-j1.6,compile-is-not-j1.6"/>
    <target name="compile-is-j1.6" if="isJava6">
        <antcall target="compile"/>
    </target>
    <target name="compile-is-not-j1.6" unless="isJava6">
        <antcall target="compile-j1.6-compatible"/>
    </target>

    <!-- create the jar after compiling with Java 1.6 -->
    <target name="jar-j1.6">
        <antcall target="clean"/>
        <antcall target="compile-j1.6"/>
        <exec executable="git" failifexecutionfails="yes" outputproperty="git.version">
            <arg value="describe"/>
            <arg value="--abbrev=40"/>
            <arg value="--always"/>
            <arg value="--dirty"/>
        </exec>
        <tstamp>
            <format property="timeAndDate.str" pattern="yyyy-MM-dd HH:mm:ss"/>
        </tstamp>
        <jar destfile="${main_setlX.dir}/${ant.project.name}-j1.6.jar" basedir="${classes.dir}" index="true">
            <manifest>
                <attribute name="Built-By"                value="${user.name} on ${timeAndDate.str}" />
                <attribute name="Implementation-Version"  value="${git.version}" />
                <attribute name="Implementation-Java"     value="${java.vendor} ${java.version}" />
                <attribute name="Implementation-Build-OS" value="${os.name} ${os.arch} ${os.version}" />
            </manifest>
        </jar>
        <antcall target="clean"/>
    </target>

    <target name="download-j1.6-rt.jar" unless="isJava6">
        <ant inheritAll="false" inheritRefs="false" antfile="build.xml" dir="${basedir}/../" target="download-j1.6-rt.jar"/>
    </target>

    <!-- clean up the mess we made by building -->
    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="dist-clean" depends="clean">
        <delete file="${main_setlX.dir}/${ant.project.name}.jar"/>
        <delete file="${main_setlX.dir}/${ant.project.name}-j1.6.jar"/>
    </target>
</project>

